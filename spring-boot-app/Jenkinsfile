pipeline {
    agent {
        docker { 
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
         }
    }

    stages {
        // stage('Clean Workspace') {
        //     steps {
        //         cleanWs()
        //     }
        // }
        // stage('Checkout Source Code') {
        //     steps {
        //         git branch: 'main', changelog: false, credentialsId: 'gitHubToken', poll: false, url: 'https://github.com/DevOps24-Ashutosh/Java_SpringBoot_CICD.git'
        //     }
        // }
        stage('Debug Workspace') {
            steps {
                sh 'echo "Container workspace:"'
                sh 'pwd'
                sh 'ls -la'
                sh 'echo "Creating a test file"'
                sh 'touch test_file.txt'
                sh 'echo "Updated container workspace:"'
                sh 'ls -la'
            }
        }
        stage('Build and Test') {
            steps {
                sh "cd spring-boot-app/ && mvn clean package" 
            }
        }
        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://3.110.179.157:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube-token', variable: 'SonarQube_Auth_Token')]) {
                    sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SonarQube_Auth_Token -Dsonar.host.url=${SONAR_URL}'
                } 
            }
        }
    }
}